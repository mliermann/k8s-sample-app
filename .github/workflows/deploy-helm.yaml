name: Deploy with Helm

on:
  workflow_dispatch:
    inputs:
      namespace:
        description: "Kubernetes namespace to deploy to"
        required: true
        default: "default"
      db_user:
        description: "Database user"
        required: true
        default: "sampleuser"
      db_pass:
        description: "Database password"
        required: true
        default: "samplepass"
      db_name:
        description: "Database name"
        required: true
        default: "sampledb"
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Set up Kubeconfig
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          echo "$KUBE_CONFIG_DATA" > $HOME/.kube/config

      - name: Ensure namespace exists
        run: |
          kubectl get namespace ${{ github.event.inputs.namespace || 'default' }} || \
          kubectl create namespace ${{ github.event.inputs.namespace || 'default' }}

      - name: Create db-secret
        run: |
          kubectl create secret generic db-secret \
            --from-literal=DB_USER=${{ github.event.inputs.db_user }} \
            --from-literal=DB_PASS=${{ github.event.inputs.db_pass }} \
            --from-literal=DB_NAME=${{ github.event.inputs.db_name }} \
            -n ${{ github.event.inputs.namespace || 'default' }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: "latest"

      - name: Helm login to OCI registry
        env:
          HELM_REGISTRY: ${{ secrets.HELM_REGISTRY }}
          HELM_USERNAME: ${{ secrets.HELM_USERNAME }}
          HELM_PASSWORD: ${{ secrets.HELM_PASSWORD }}
        run: |
          helm registry login $HELM_REGISTRY --username $HELM_USERNAME --password $HELM_PASSWORD

      - name: Deploy frontend chart
        run: |
          helm upgrade --install frontend oci://${{ secrets.HELM_REGISTRY }}/frontend \
            --namespace ${{ github.event.inputs.namespace || 'default' }} \
            --version 0.1.0

      - name: Deploy backend chart
        run: |
          helm upgrade --install backend oci://${{ secrets.HELM_REGISTRY }}/backend \
            --namespace ${{ github.event.inputs.namespace || 'default' }} \
            --version 0.1.0

      - name: Deploy Postgres cluster
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm upgrade --install postgres bitnami/postgresql \
            --namespace ${{ github.event.inputs.namespace || 'default' }} \
            --set architecture=replication \
            --set replicaCount=3 \
            --set auth.username=${{ github.event.inputs.db_user }} \
            --set auth.password=${{ github.event.inputs.db_pass }} \
            --set auth.database=sampledb

      - name: Verify frontend deployment
        run: |
          kubectl rollout status deployment/frontend -n ${{ github.event.inputs.namespace || 'default' }} --timeout=120s

      - name: Verify backend deployment
        run: |
          kubectl rollout status deployment/backend -n ${{ github.event.inputs.namespace || 'default' }} --timeout=120s

      - name: Verify postgres statefulset
        run: |
          kubectl rollout status statefulset/postgres -n ${{ github.event.inputs.namespace || 'default' }} --timeout=180s