apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
data:
  DATABASE_HOST: "postgres"
  ENV_VARS: "DEBUG=true,LOG_LEVEL=info"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: backend:latest
          ports:
            - containerPort: 8000
            - containerPort: 9100 # metrics endpoint
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          env:
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: DATABASE_HOST
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: DB_USER
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: DB_PASS
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: DB_NAME
            - name: ENV_VARS
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: ENV_VARS
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  ports:
    - port: 8000
    - port: 9100
      name: metrics
  selector:
    app: backend
#
# enable the following section if you want to monitor the backend service with Prometheus
# ---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: backend-servicemonitor
#   labels:
#     release: prometheus
# spec:
#   selector:
#     matchLabels:
#       app: backend
#   endpoints:
#     - port: metrics
#       path: /metrics
#       interval: 30s
#       scrapeTimeout: 10s
